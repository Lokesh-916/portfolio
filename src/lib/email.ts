import { Resend } from 'resend';

const resend = new Resend(process.env.RESEND_API_KEY);

export interface ConversationMessage {
  role: 'user' | 'assistant';
  content: string;
  timestamp?: string;
}

export interface ConversationEmailData {
  messages: ConversationMessage[];
  userInfo?: {
    ip?: string;
    userAgent?: string;
    timestamp: string;
  };
}

export async function sendConversationEmail(data: ConversationEmailData) {
  try {
    const { messages, userInfo } = data;
    
    // Format conversation for email
    const conversationHtml = formatConversationForEmail(messages);
    
    const emailResult = await resend.emails.send({
      from: 'Lokesh Portfolio <onboarding@resend.dev>', // Using Resend's test domain
      to: [process.env.YOUR_EMAIL || 'your-email@gmail.com'], // Where you want to receive emails
      subject: `New Chat Conversation - ${new Date().toLocaleDateString()}`,
      html: generateEmailTemplate(conversationHtml, userInfo),
    });

    console.log('Email sent successfully:', emailResult);
    return { success: true, id: emailResult.data?.id };
  } catch (error) {
    console.error('Failed to send email:', error);
    return { success: false, error: error instanceof Error ? error.message : 'Unknown error' };
  }
}

function formatConversationForEmail(messages: ConversationMessage[]): string {
  return messages
    .filter((message) => message.content && (message.role === 'user' || message.role === 'assistant'))
    .map((message, index) => {
      const isUser = message.role === 'user';
      const timestamp = message.timestamp || new Date().toISOString();
      const formattedTime = new Date(timestamp).toLocaleString();
      
      return `
        <div style="margin-bottom: 20px; padding: 15px; border-radius: 8px; ${isUser ? 'background-color: #f0f9ff; border-left: 4px solid #3b82f6;' : 'background-color: #f8fafc; border-left: 4px solid #64748b;'}">
          <div style="font-weight: bold; color: ${isUser ? '#1e40af' : '#475569'}; margin-bottom: 8px;">
            ${isUser ? 'ðŸ‘¤ User' : 'ðŸ¤– AI Assistant'}
            <span style="font-size: 12px; color: #6b7280; margin-left: 10px;">${formattedTime}</span>
          </div>
          <div style="color: #374151; line-height: 1.6; white-space: pre-wrap;">
            ${message.content.replace(/\n/g, '<br>')}
          </div>
        </div>
      `;
    })
    .join('');
}

function generateEmailTemplate(conversationHtml: string, userInfo?: any): string {
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>New Chat Conversation</title>
    </head>
    <body style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #374151; max-width: 800px; margin: 0 auto; padding: 20px;">
      <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 30px; border-radius: 12px; margin-bottom: 30px;">
        <h1 style="color: white; margin: 0; font-size: 28px; text-align: center;">
          ðŸŽ‰ New Chat Conversation
        </h1>
        <p style="color: rgba(255,255,255,0.9); text-align: center; margin: 10px 0 0 0;">
          Someone just had a conversation with your AI portfolio!
        </p>
      </div>

      ${userInfo ? `
        <div style="background-color: #f9fafb; padding: 15px; border-radius: 8px; margin-bottom: 20px; border: 1px solid #e5e7eb;">
          <h3 style="margin: 0 0 10px 0; color: #374151;">ðŸ“Š Conversation Details</h3>
          <div style="font-size: 14px; color: #6b7280;">
            <p><strong>Time:</strong> ${new Date(userInfo.timestamp).toLocaleString()}</p>
            ${userInfo.ip ? `<p><strong>IP Address:</strong> ${userInfo.ip}</p>` : ''}
            ${userInfo.userAgent ? `<p><strong>User Agent:</strong> ${userInfo.userAgent}</p>` : ''}
          </div>
        </div>
      ` : ''}

      <div style="background-color: white; border: 1px solid #e5e7eb; border-radius: 12px; padding: 25px; box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);">
        <h2 style="margin: 0 0 20px 0; color: #111827; border-bottom: 2px solid #e5e7eb; padding-bottom: 10px;">
          ðŸ’¬ Conversation
        </h2>
        ${conversationHtml}
      </div>

      <div style="text-align: center; margin-top: 30px; padding: 20px; background-color: #f9fafb; border-radius: 8px;">
        <p style="margin: 0; color: #6b7280; font-size: 14px;">
          This email was automatically generated by your AI portfolio chat system.
        </p>
      </div>
    </body>
    </html>
  `;
} 